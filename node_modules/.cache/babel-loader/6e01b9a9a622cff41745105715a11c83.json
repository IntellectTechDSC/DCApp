{"ast":null,"code":"var _jsxFileName = \"/Users/gregoryflowers/Desktop/DSC/ITLT/Repos/DCApp/source/DCApp_Cordova/src/components/NavigationCards.js\";\nimport React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport * as contentful from 'contentful';\nimport CardBlock from './src/components/CardBlock';\nconst SPACE_ID = '[INSERT CONTENTFUL SPACE ID]';\nconst ACCESS_TOKEN = '[INSERT CONTENTFUL ACCESS TOKEN]';\nconst client = contentful.createClient({\n  space: SPACE_ID,\n  accessToken: ACCESS_TOKEN\n});\n\nclass NavigationCards extends Component {\n  constructor() {\n    super();\n    this.state = {\n      cards: [],\n      searchString: ''\n    };\n\n    this.getCourses = () => {\n      client.getEntries({\n        content_type: 'course',\n        query: this.state.searchString\n      }).then(response => {\n        this.setState({\n          courses: response.items\n        });\n        console.log(this.state.cards);\n      }).catch(error => {\n        console.log(\"Error occurred while fetching Entries\");\n        console.error(error);\n      });\n    };\n\n    this.onSearchInputChange = event => {\n      console.log(\"Search changed ...\" + event.target.value);\n\n      if (event.target.value) {\n        this.setState({\n          searchString: event.target.value\n        });\n      } else {\n        this.setState({\n          searchString: ''\n        });\n      }\n\n      this.getCourses();\n    };\n\n    this.getCourses();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, this.state.cards ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      style: {\n        padding: 24\n      },\n      id: \"searchInput\",\n      placeholder: \"Search for Courses\",\n      margin: \"normal\",\n      onChange: this.onSearchInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 24,\n      style: {\n        padding: 24\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }\n    }, this.state.cards.map(currentCard => /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      lg: 4,\n      xl: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(CardBlock, {\n      course: currentCard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 37\n      }\n    }))))) : \"No courses found\");\n  }\n\n}\n\nexport default NavigationCards;","map":{"version":3,"sources":["/Users/gregoryflowers/Desktop/DSC/ITLT/Repos/DCApp/source/DCApp_Cordova/src/components/NavigationCards.js"],"names":["React","Component","Grid","TextField","contentful","CardBlock","SPACE_ID","ACCESS_TOKEN","client","createClient","space","accessToken","NavigationCards","constructor","state","cards","searchString","getCourses","getEntries","content_type","query","then","response","setState","courses","items","console","log","catch","error","onSearchInputChange","event","target","value","render","padding","map","currentCard"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport * as contentful from 'contentful'\nimport CardBlock from './src/components/CardBlock'\n\n\nconst SPACE_ID = '[INSERT CONTENTFUL SPACE ID]'\nconst ACCESS_TOKEN = '[INSERT CONTENTFUL ACCESS TOKEN]'\n\nconst client = contentful.createClient({\n    space: SPACE_ID,\n    accessToken: ACCESS_TOKEN\n})\n\n\nclass NavigationCards extends Component {\n    state = {\n        cards: [],\n        searchString: ''\n    }\n    constructor() {\n        super()\n        this.getCourses()\n    }\n    getCourses = () => {\n        client.getEntries({\n            content_type: 'course',\n            query: this.state.searchString\n        })\n        .then((response) => {\n            this.setState({courses: response.items})\n            console.log(this.state.cards)\n        })\n        .catch((error) => {\n          console.log(\"Error occurred while fetching Entries\")\n          console.error(error)\n        })\n    }\n    onSearchInputChange = (event) => {\n        console.log(\"Search changed ...\" + event.target.value)\n        if (event.target.value) {\n            this.setState({searchString: event.target.value})\n        } else {\n            this.setState({searchString: ''})\n        }\n        this.getCourses()\n    }\n    render() {\n        return (\n            <div>\n                { this.state.cards ? (\n                    <div>\n                        <TextField style={{padding: 24}}\n                            id=\"searchInput\"\n                            placeholder=\"Search for Courses\"   \n                            margin=\"normal\"\n                            onChange={this.onSearchInputChange}\n                            />\n                        <Grid container spacing={24} style={{padding: 24}}>\n                            { this.state.cards.map(currentCard => (\n                                <Grid item xs={12} sm={6} lg={4} xl={3}>\n                                    <CardBlock course={currentCard} />\n                                </Grid>\n                            ))}\n                        </Grid>\n                    </div>\n                ) : \"No courses found\" }\n            </div>\n        )\n    }\n}\nexport default NavigationCards;"]},"metadata":{},"sourceType":"module"}